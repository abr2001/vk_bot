version: "3"

services:  
  redis:
    image: redis:5.0.3-alpine3.9
    command: redis-server
    volumes:
      - "redis:/data"
    ports:
      - "6379:6379"      

  app:    
    build:      
      context: .
      dockerfile: ./docker/app/DockerFile    
    image: app:latest
    volumes:
      - .:/var/www/vk_bot
      - ./config/docker/database.yml:/app/config/database.yml
    stdin_open: true
    tty: true
    environment:
      - "RAILS_LOG_TO_STDOUT=true"
      - "DB_USERNAME=root"
      - "DB_PASSWORD=root"
      - "DB_DATABASE=vk_bot"
      - "DB_PORT=3306"
      - "DB_HOST=sql_server"
      - "RAILS_ENV=production"
      - "RAILS_MAX_THREADS=5"
      - "REDIS_URL=redis://redis:6379/0"
    depends_on:      
      - mysql  
      - redis
    links:
      - mysql:sql_server
      - redis:redis

  mysql:
    image: mysql:5.7.28
    command: --innodb_use_native_aio=0
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_USERNAME=root"
      - "MYSQL_USER=user"
      - "MYSQL_PASSWORD=root"
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql

  web:    
    build:      
      context: .      
      dockerfile: ./docker/web/DockerFile    
    depends_on:      
      - app    
    ports:      
      - 80:80
      - 443:443

  sidekiq:
    build:
      context: .
      dockerfile: ./docker/app/DockerFile
    image: vk-bot-sidekiq:latest
    command: bundle exec sidekiq
    volumes:
      - .:/var/www/vk_bot
      - ./config/docker/database.yml:/app/config/database.yml
    stdin_open: true
    tty: true
    environment:
      - "RAILS_LOG_TO_STDOUT=true"
      - "DB_USERNAME=root"
      - "DB_PASSWORD=root"
      - "DB_DATABASE=vk_bot"
      - "DB_PORT=3306"
      - "DB_HOST=sql_server"
      - "RAILS_ENV=production"
      - "RAILS_MAX_THREADS=5"
      - "REDIS_URL=redis://redis:6379/0"
    depends_on:      
      - mysql  
      - redis
    links:
      - mysql:sql_server
      - redis:redis

volumes:
  mysql:
  redis:
